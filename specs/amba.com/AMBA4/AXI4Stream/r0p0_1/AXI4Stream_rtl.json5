{
  abstractionDefinition: {
    vendor: 'amba.com',
    library: 'AMBA4',
    name: 'AXI4Stream_rtl',
    version: 'r0p0_1',
    busType: {
      vendor: 'amba.com',
      library: 'AMBA4',
      name: 'AXI4Stream',
      version: 'r0p0_1',
    },
    ports: {
      ACLK: {
        description: 'Global clock signal. All signals are sampled on the rising edge of the global clock',
        wire: {
          isClock: true,
          onMaster: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          onSlave: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          requiresDriver: true,
        },
      },
      ACLKEN: {
        description: 'Clock enable signal. Used as a qualifier for the ACLK signal',
        wire: {
          onMaster: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          onSlave: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          defaultValue: 1,
        },
        vendorExtensions: [],
      },
      ARESETn: {
        description: 'Global reset signal. This signal is active LOW',
        wire: {
          isReset: true,
          onMaster: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          onSlave: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          requiresDriver: true,
        },
      },
      TVALID: {
        description: 'This signal indicates that the master is driving a valid transfer. A transfer takes place when both TVALID and TREADY are asserted.',
        wire: {
          onMaster: {
            presence: 'required',
            width: 1,
            direction: 'out',
          },
          onSlave: {
            presence: 'required',
            width: 1,
            direction: 'in',
          },
        },
      },
      TREADY: {
        description: 'This signal indicates that the slave can accept  a transfer in the current cycle.',
        wire: {
          onMaster: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          onSlave: {
            presence: 'optional',
            width: 1,
            direction: 'out',
          },
          defaultValue: 1,
        },
      },
      TDATA: {
        description: 'This bus is the primary payload that is used to provide the data that is passing across the interface. The width of the data payload is an integer number of bytes.',
        wire: {
          isData: true,
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
          defaultValue: 0,
        },
      },
      TSTRB: {
        description: 'TSTRB is the byte qualifier that indicates whether the content of the associated byte of TDATA is processed as a data byte of position byte. \n            When TSTRB is absent and TKEEP is present, TSTRB defaults to TKEEP.',
        wire: {
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
        },
        vendorExtensions: [],
      },
      TKEEP: {
        description: 'TKEEP is the byte qualifier that indicates whether the content of the associated byte of TDATA is processed as a data stream. Associated bytes that have the TKEEP byte qualifier deasserted are null bytes and can be removed from the data stream. ',
        wire: {
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
        },
        vendorExtensions: [],
      },
      TLAST: {
        description: 'This signal indicates the boundary of a packet.',
        wire: {
          onMaster: {
            presence: 'optional',
            width: 1,
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            width: 1,
            direction: 'in',
          },
          defaultValue: 1,
        },
      },
      TID: {
        description: 'This is used as data stream identifier that indicates different streams of data.',
        wire: {
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
          defaultValue: 0,
        },
      },
      TDEST: {
        description: 'This signal provides routing information for the data stream.',
        wire: {
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
          defaultValue: 0,
        },
      },
      TUSER: {
        description: 'TUSER is user defined sideband information that can be transmitted alongside the data stream.',
        isUser: true,
        wire: {
          onMaster: {
            presence: 'optional',
            direction: 'out',
          },
          onSlave: {
            presence: 'optional',
            direction: 'in',
          },
          defaultValue: 0,
        },
      },
    },
    description: 'AMBA AXI4-Stream Protocol Specification v1.0',
    vendorExtensions: [],
  },
}
