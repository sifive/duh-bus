{
  abstractionDefinition: {
    vendor: 'sifive.com',
    library: 'PRCI',
    name: 'RESET_rtl',
    version: '0.1.0',
    busType: {
      vendor: 'sifive.com',
      library: 'PRCI',
      name: 'RESET',
      version: '0.1.0',
    },
    ports: {
      RESET: {
        description: 'reset signals',
        wire: {
          isReset: true,
          onMaster: {direction: 'out', presence: 'required'},
          onSlave:  {direction: 'in', presence: 'required'}
        }
      }
    },
    props: {
      polarity: {
        type: 'string',
        enum: ['ActiveHigh', 'ActiveLow'],
        default: 'ActiveLow'
      },
      type: {
        type: 'string',
        enum: ['Synchronous', 'Asynchronous', 'Full Asynchronous']
      },
      clocksBeforeDeassertion: {
        type: 'integer',
        description: 'Number of clock edges that must be provided before this reset signal is deasserted in order to properly initialize and clear contention within the IP.  Note that the minimum is 1 for all cases until we can figure out how to represent a conditional minimum (i.e. if Async  min=0, else min ==1',
        minimum: 1
      },
      clocksAfterDeassertion: {
        type: 'integer',
        description: 'Number of clock edges that must be provided after this reset signal is deasserted before the IP is available for use',
        minimum: 0
      }
    }
  }
}
