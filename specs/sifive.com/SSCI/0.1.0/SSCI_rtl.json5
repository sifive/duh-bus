{
  $schema: 'https://drom.io/duh.json',
  abstractionDefinition: {
    vendor: 'sifive.com', library: 'SSCI', name: 'SSCI', version: '0.1.0',
    busType: {
      vendor: 'sifive.com', library: 'SSCI', name: 'SSCI', version: '0.1.0'
    },
    ports: {
      clock: {
        description: 'Clock at same frequency as core clock',
        wire: {
          isClock: true,
          onInitiator: { width: 1, direction: 'in', presence: 'required' },
          onTarget:    { width: 1, direction: 'in', presence: 'required' }
        }
      },
      reset: {
        description: 'Synchronous reset signal, positive polarity',
        wire: {
          isReset: true,
          onInitiator: { width: 1, direction: 'in', presence: 'required' },
          onTarget:    { width: 1, direction: 'in', presence: 'required' }
        }
      },
      req_valid: {
        description: 'Processor is sending a valid command to the coprocessor',
        wire: {
          onInitiator: { width: 1, direction: 'out', presence: 'required' },
          onTarget:    { width: 1, direction: 'in', presence: 'required' }
        }
      },
      req_ready: {
        description: 'Coprocessor can accept a new command',
        wire: {
          onInitiator: { width: 1, direction: 'in', presence: 'required' },
          onTarget:    { width: 1, direction: 'out', presence: 'required' }
        }
      },
      req_data1: {
        description: 'Source operand 1',
        wire: {
          isData: true,
          onInitiator: { width: 'XLEN', direction: 'out', presence: 'required' },
          onTarget:    { width: 'XLEN', direction: 'in', presence: 'required' }
        }
      },
      req_data2: {
        description: 'Source operand 2',
        wire: {
          isData: true,
          onInitiator: { width: 'XLEN', direction: 'out', presence: 'required' },
          onTarget:    { width: 'XLEN', direction: 'in', presence: 'required' }
        }
      },
      req_funct7: {
        description: 'Instruction bits 31..25',
        wire: {
          onInitiator: { width: 7, direction: 'out', presence: 'required' },
          onTarget:    { width: 7, direction: 'in', presence: 'required' }
        }
      },
      req_funct3: {
        description: 'Instruction bits 14..12',
        wire: {
          onInitiator: { width: 3, direction: 'out', presence: 'required' },
          onTarget:    { width: 3, direction: 'in', presence: 'required' },
        },
      },
      req_respond: {
        description: 'Encodes if a response is required',
        wire: {
          onInitiator: { width: 1, direction: 'out', presence: 'required' },
          onTarget:    { width: 1, direction: 'in', presence: 'required' },
        },
      },
      resp_valid: {
        description: 'Coprocessor is sending a valid response to the processor',
        wire: {
          onInitiator: { width: 1, direction: 'in', presence: 'required' },
          onTarget:    { width: 1, direction: 'out', presence: 'required' },
        },
      },
      resp_ready: {
        description: 'Processor can accept a response',
        wire: {
          onInitiator: { width: 1, direction: 'out', presence: 'required' },
          onTarget:    { width: 1, direction: 'in', presence: 'required' },
        },
      },
      resp_data: {
        description: 'Response data',
        wire: {
          isData: true,
          onInitiator: { width: 'XLEN', direction: 'in', presence: 'required' },
          onTarget:    { width: 'XLEN', direction: 'out', presence: 'required' }
        }
      }
    },
    props: {
      XLEN: {
        type: 'integer',
        enum: [32, 64],
        description: 'integer register width'
      }
    }
  }
}
